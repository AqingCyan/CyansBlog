(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{248:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"了解-treeshaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解-treeshaking","aria-hidden":"true"}},[s._v("#")]),s._v(" 了解 TreeShaking")]),s._v(" "),a("p",[s._v("我们在 src 文件夹下创建一个 math.js 文件，导出两个方法，index.js 文件引入了 add 方法并执行。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("minus")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("这个时候我们是没有引入minus方法，但我们打开dist目录下的main.js文件，发现在最底下，它不仅打包了add方法还打包了minus方法？这是没有必要的。")]),s._v(" "),a("h2",{attrs:{id:"treeshaking引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#treeshaking引入","aria-hidden":"true"}},[s._v("#")]),s._v(" TreeShaking引入")]),s._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("TreeShaking的意为摇动树木，也就说把代码结构比作树，通过摇动来把树上不必要的东西摇掉。")])]),s._v(" "),a("p",[a("strong",[s._v("TreeShaking只支持ES Module的静态引入方式")]),s._v("，首先在开发环境下，默认没有TreeShaking，需要在config文件中配置，然后在package.json中写入"),a("code",[s._v('"sideEffects": false')]),s._v("，意为如果配置了TreeShaking，那么所有的模块只要打包就用TreeShaking的方式打包（该模块未导出任何内容或者被使用就不会被打包）。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("optimization"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  usedExports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"danger custom-block"},[a("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),a("p",[s._v("在某些情况下，如在文件中引入了"),a("code",[s._v("@babel/polly-fill")]),s._v("模块，假如文件中没有使用ES6的内容，TreeShaking就不会打包它，但在配置了loader的情况下，不打包它就会报错。因此，我们在某些情况下可以将不需要被TreeShaking的模块在package的sideEffects配置："),a("code",[s._v('"sideEffects": ["@babel/polly-fill"]')]),s._v("👌")])]),s._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("因此，考虑到一些引入css模块，例如"),a("code",[s._v("import './style.css")]),s._v("，没有显式的导入任何内容，会被TreeShaking忽略掉，所以我们还是得在"),a("code",[s._v('"sideEffects": ["*.style"]')]),s._v("这样配置一下😄")])]),s._v(" "),a("p",[s._v("现在打包看看，我们发现打包后的main.js文件的最后一行，依然打包进了minus方法，但多了一行注释，意为这个模块提供了两个方法，但只使用了add方法。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*! exports provided: add, minus */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*! exports used: add */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("因为，在开发环境下生成的代码可能需要做一些调试，如果TreeShaking在开发环境下将不必要的代码删除掉的话，可能会使sourcemap对应的行数产生错误，所以在开发环境下会保留这些代码，只是在注释上做一个提示。但若我们把mode换成生成环境，就会严格按照TreeShaking不打包未用到的模块。（我们甚至不用自己去配置TreeShaking，webpack会自动配置好）")])])}],!1,null,null,null);t.default=e.exports}}]);